/**
 * generated by Xtext 2.18.0.M3
 */
package fr.ytpdsl.ytpDsl.impl;

import fr.ytpdsl.ytpDsl.GeneratorInformation;
import fr.ytpdsl.ytpDsl.VideoLibrary;
import fr.ytpdsl.ytpDsl.YtpDslPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Generator Information</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.ytpdsl.ytpDsl.impl.GeneratorInformationImpl#getAuthorName <em>Author Name</em>}</li>
 *   <li>{@link fr.ytpdsl.ytpDsl.impl.GeneratorInformationImpl#getVersion <em>Version</em>}</li>
 *   <li>{@link fr.ytpdsl.ytpDsl.impl.GeneratorInformationImpl#getCreationDate <em>Creation Date</em>}</li>
 *   <li>{@link fr.ytpdsl.ytpDsl.impl.GeneratorInformationImpl#getFfmpeg <em>Ffmpeg</em>}</li>
 *   <li>{@link fr.ytpdsl.ytpDsl.impl.GeneratorInformationImpl#getFfprobe <em>Ffprobe</em>}</li>
 *   <li>{@link fr.ytpdsl.ytpDsl.impl.GeneratorInformationImpl#getLibrary <em>Library</em>}</li>
 * </ul>
 *
 * @generated
 */
public class GeneratorInformationImpl extends MinimalEObjectImpl.Container implements GeneratorInformation
{
  /**
   * The default value of the '{@link #getAuthorName() <em>Author Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAuthorName()
   * @generated
   * @ordered
   */
  protected static final String AUTHOR_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAuthorName() <em>Author Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAuthorName()
   * @generated
   * @ordered
   */
  protected String authorName = AUTHOR_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getVersion() <em>Version</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVersion()
   * @generated
   * @ordered
   */
  protected static final String VERSION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVersion() <em>Version</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVersion()
   * @generated
   * @ordered
   */
  protected String version = VERSION_EDEFAULT;

  /**
   * The default value of the '{@link #getCreationDate() <em>Creation Date</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCreationDate()
   * @generated
   * @ordered
   */
  protected static final String CREATION_DATE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCreationDate() <em>Creation Date</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCreationDate()
   * @generated
   * @ordered
   */
  protected String creationDate = CREATION_DATE_EDEFAULT;

  /**
   * The default value of the '{@link #getFfmpeg() <em>Ffmpeg</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFfmpeg()
   * @generated
   * @ordered
   */
  protected static final String FFMPEG_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFfmpeg() <em>Ffmpeg</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFfmpeg()
   * @generated
   * @ordered
   */
  protected String ffmpeg = FFMPEG_EDEFAULT;

  /**
   * The default value of the '{@link #getFfprobe() <em>Ffprobe</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFfprobe()
   * @generated
   * @ordered
   */
  protected static final String FFPROBE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFfprobe() <em>Ffprobe</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFfprobe()
   * @generated
   * @ordered
   */
  protected String ffprobe = FFPROBE_EDEFAULT;

  /**
   * The cached value of the '{@link #getLibrary() <em>Library</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLibrary()
   * @generated
   * @ordered
   */
  protected EList<VideoLibrary> library;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected GeneratorInformationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return YtpDslPackage.Literals.GENERATOR_INFORMATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAuthorName()
  {
    return authorName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAuthorName(String newAuthorName)
  {
    String oldAuthorName = authorName;
    authorName = newAuthorName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, YtpDslPackage.GENERATOR_INFORMATION__AUTHOR_NAME, oldAuthorName, authorName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getVersion()
  {
    return version;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVersion(String newVersion)
  {
    String oldVersion = version;
    version = newVersion;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, YtpDslPackage.GENERATOR_INFORMATION__VERSION, oldVersion, version));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCreationDate()
  {
    return creationDate;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCreationDate(String newCreationDate)
  {
    String oldCreationDate = creationDate;
    creationDate = newCreationDate;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, YtpDslPackage.GENERATOR_INFORMATION__CREATION_DATE, oldCreationDate, creationDate));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getFfmpeg()
  {
    return ffmpeg;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFfmpeg(String newFfmpeg)
  {
    String oldFfmpeg = ffmpeg;
    ffmpeg = newFfmpeg;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, YtpDslPackage.GENERATOR_INFORMATION__FFMPEG, oldFfmpeg, ffmpeg));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getFfprobe()
  {
    return ffprobe;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFfprobe(String newFfprobe)
  {
    String oldFfprobe = ffprobe;
    ffprobe = newFfprobe;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, YtpDslPackage.GENERATOR_INFORMATION__FFPROBE, oldFfprobe, ffprobe));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<VideoLibrary> getLibrary()
  {
    if (library == null)
    {
      library = new EObjectContainmentEList<VideoLibrary>(VideoLibrary.class, this, YtpDslPackage.GENERATOR_INFORMATION__LIBRARY);
    }
    return library;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case YtpDslPackage.GENERATOR_INFORMATION__LIBRARY:
        return ((InternalEList<?>)getLibrary()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case YtpDslPackage.GENERATOR_INFORMATION__AUTHOR_NAME:
        return getAuthorName();
      case YtpDslPackage.GENERATOR_INFORMATION__VERSION:
        return getVersion();
      case YtpDslPackage.GENERATOR_INFORMATION__CREATION_DATE:
        return getCreationDate();
      case YtpDslPackage.GENERATOR_INFORMATION__FFMPEG:
        return getFfmpeg();
      case YtpDslPackage.GENERATOR_INFORMATION__FFPROBE:
        return getFfprobe();
      case YtpDslPackage.GENERATOR_INFORMATION__LIBRARY:
        return getLibrary();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case YtpDslPackage.GENERATOR_INFORMATION__AUTHOR_NAME:
        setAuthorName((String)newValue);
        return;
      case YtpDslPackage.GENERATOR_INFORMATION__VERSION:
        setVersion((String)newValue);
        return;
      case YtpDslPackage.GENERATOR_INFORMATION__CREATION_DATE:
        setCreationDate((String)newValue);
        return;
      case YtpDslPackage.GENERATOR_INFORMATION__FFMPEG:
        setFfmpeg((String)newValue);
        return;
      case YtpDslPackage.GENERATOR_INFORMATION__FFPROBE:
        setFfprobe((String)newValue);
        return;
      case YtpDslPackage.GENERATOR_INFORMATION__LIBRARY:
        getLibrary().clear();
        getLibrary().addAll((Collection<? extends VideoLibrary>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case YtpDslPackage.GENERATOR_INFORMATION__AUTHOR_NAME:
        setAuthorName(AUTHOR_NAME_EDEFAULT);
        return;
      case YtpDslPackage.GENERATOR_INFORMATION__VERSION:
        setVersion(VERSION_EDEFAULT);
        return;
      case YtpDslPackage.GENERATOR_INFORMATION__CREATION_DATE:
        setCreationDate(CREATION_DATE_EDEFAULT);
        return;
      case YtpDslPackage.GENERATOR_INFORMATION__FFMPEG:
        setFfmpeg(FFMPEG_EDEFAULT);
        return;
      case YtpDslPackage.GENERATOR_INFORMATION__FFPROBE:
        setFfprobe(FFPROBE_EDEFAULT);
        return;
      case YtpDslPackage.GENERATOR_INFORMATION__LIBRARY:
        getLibrary().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case YtpDslPackage.GENERATOR_INFORMATION__AUTHOR_NAME:
        return AUTHOR_NAME_EDEFAULT == null ? authorName != null : !AUTHOR_NAME_EDEFAULT.equals(authorName);
      case YtpDslPackage.GENERATOR_INFORMATION__VERSION:
        return VERSION_EDEFAULT == null ? version != null : !VERSION_EDEFAULT.equals(version);
      case YtpDslPackage.GENERATOR_INFORMATION__CREATION_DATE:
        return CREATION_DATE_EDEFAULT == null ? creationDate != null : !CREATION_DATE_EDEFAULT.equals(creationDate);
      case YtpDslPackage.GENERATOR_INFORMATION__FFMPEG:
        return FFMPEG_EDEFAULT == null ? ffmpeg != null : !FFMPEG_EDEFAULT.equals(ffmpeg);
      case YtpDslPackage.GENERATOR_INFORMATION__FFPROBE:
        return FFPROBE_EDEFAULT == null ? ffprobe != null : !FFPROBE_EDEFAULT.equals(ffprobe);
      case YtpDslPackage.GENERATOR_INFORMATION__LIBRARY:
        return library != null && !library.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (authorName: ");
    result.append(authorName);
    result.append(", version: ");
    result.append(version);
    result.append(", creationDate: ");
    result.append(creationDate);
    result.append(", ffmpeg: ");
    result.append(ffmpeg);
    result.append(", ffprobe: ");
    result.append(ffprobe);
    result.append(')');
    return result.toString();
  }

} //GeneratorInformationImpl
