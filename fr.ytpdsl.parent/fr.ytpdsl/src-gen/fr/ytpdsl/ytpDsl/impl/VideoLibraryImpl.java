/**
 * generated by Xtext 2.18.0.M3
 */
package fr.ytpdsl.ytpDsl.impl;

import fr.ytpdsl.ytpDsl.VideoLibrary;
import fr.ytpdsl.ytpDsl.YtpDslPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Video Library</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.ytpdsl.ytpDsl.impl.VideoLibraryImpl#getFolder <em>Folder</em>}</li>
 *   <li>{@link fr.ytpdsl.ytpDsl.impl.VideoLibraryImpl#getExtension <em>Extension</em>}</li>
 * </ul>
 *
 * @generated
 */
public class VideoLibraryImpl extends MinimalEObjectImpl.Container implements VideoLibrary
{
  /**
   * The default value of the '{@link #getFolder() <em>Folder</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFolder()
   * @generated
   * @ordered
   */
  protected static final String FOLDER_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFolder() <em>Folder</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFolder()
   * @generated
   * @ordered
   */
  protected String folder = FOLDER_EDEFAULT;

  /**
   * The cached value of the '{@link #getExtension() <em>Extension</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExtension()
   * @generated
   * @ordered
   */
  protected EList<String> extension;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected VideoLibraryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return YtpDslPackage.Literals.VIDEO_LIBRARY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getFolder()
  {
    return folder;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFolder(String newFolder)
  {
    String oldFolder = folder;
    folder = newFolder;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, YtpDslPackage.VIDEO_LIBRARY__FOLDER, oldFolder, folder));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getExtension()
  {
    if (extension == null)
    {
      extension = new EDataTypeEList<String>(String.class, this, YtpDslPackage.VIDEO_LIBRARY__EXTENSION);
    }
    return extension;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case YtpDslPackage.VIDEO_LIBRARY__FOLDER:
        return getFolder();
      case YtpDslPackage.VIDEO_LIBRARY__EXTENSION:
        return getExtension();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case YtpDslPackage.VIDEO_LIBRARY__FOLDER:
        setFolder((String)newValue);
        return;
      case YtpDslPackage.VIDEO_LIBRARY__EXTENSION:
        getExtension().clear();
        getExtension().addAll((Collection<? extends String>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case YtpDslPackage.VIDEO_LIBRARY__FOLDER:
        setFolder(FOLDER_EDEFAULT);
        return;
      case YtpDslPackage.VIDEO_LIBRARY__EXTENSION:
        getExtension().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case YtpDslPackage.VIDEO_LIBRARY__FOLDER:
        return FOLDER_EDEFAULT == null ? folder != null : !FOLDER_EDEFAULT.equals(folder);
      case YtpDslPackage.VIDEO_LIBRARY__EXTENSION:
        return extension != null && !extension.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (folder: ");
    result.append(folder);
    result.append(", extension: ");
    result.append(extension);
    result.append(')');
    return result.toString();
  }

} //VideoLibraryImpl
